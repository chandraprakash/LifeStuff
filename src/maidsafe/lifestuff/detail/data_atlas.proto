package maidsafe.lifestuff;

// Messages between same identities
message LogoutProceedings {  // type 1
  optional bytes session_requestor = 1;
  optional bytes session_acknowledger = 2;
  optional bytes session_terminated = 3;
}

message OtherInstanceMessage {
  required uint32 message_type = 1;
  required bytes serialised_message = 2;
}

// Message used to send owner's contact info to recipient for acceptance into recipient's list
message Introduction {
  required bytes inbox_name = 1;
  required bytes public_id = 2;
  required bytes profile_picture_data_map = 3;
  required bytes pointer_to_info = 4;
  required bytes timestamp = 5;
  required uint32 type = 6;
  required bytes message = 7;
}

// Generic message for use in sending messages/files, sharing folders, annotating files, etc.
message Message {
  required uint32 type = 1;
  required bytes sender_public_id = 2;
  required bytes receiver_public_id = 3;
  repeated bytes content = 4;
  required bytes timestamp = 5;
}

message LifeStuffCard {
  required bool empty = 1;
  required bytes timestamp = 2;
  repeated bytes key = 3;
  repeated bytes value = 4;
}

message PublicContact {
  required bytes public_id = 1;
  required bytes mpid_name = 2;
  required bytes inbox_name = 3;
  required bytes mpid_public_key = 4;
  required bytes inbox_public_key = 5;
  required bytes profile_picture_data_map = 6;
  required uint32 status = 7;
  required uint32 rank = 8;
  required uint32 last_contact = 9;
  required bytes pointer_to_info = 10;
}

message ShareInformationContainer {
  required bytes share_name = 1;
  required uint32 share_type = 2;
}

message PublicIdentity {
  required bytes public_id = 1;
  required bytes profile_picture_data_map = 2;
  required bytes pointer_to_info = 3;
  repeated PublicContact contacts = 4;
  repeated ShareInformationContainer shares = 5;
}

message PassportData {
  required bytes serialised_keyring = 1;
 }

message DriveData {
  required bytes unique_user_id = 1;
  required bytes root_parent_id = 2;
  required int64 max_space = 3;
  required int64 used_space = 4;
}

message DataAtlas {
  required DriveData drive_data = 1;
  required PassportData passport_data = 2;
  repeated PublicIdentity public_ids = 3;
  required bytes timestamp = 4;
}

message LockingItem {
  required bytes identifier = 1;
  required bytes timestamp = 2;
  required bool full_access = 3;
  required int64 active = 4;
  repeated bytes pending_action = 5;
}

message LockingPacket {
  required bytes space_filler = 1;
  repeated LockingItem locking_item = 2;
}

